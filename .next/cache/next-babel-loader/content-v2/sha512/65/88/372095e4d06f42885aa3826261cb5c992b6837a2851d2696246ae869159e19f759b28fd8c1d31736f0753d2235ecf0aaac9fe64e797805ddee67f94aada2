{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Andrey luiz\\\\Desktop\\\\MUFASA\\\\mufasa_vercel\\\\pages\\\\entrar.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { DataContext } from '../store/GlobalState';\nimport ACTION from '../store/Actions';\nimport Loading from '../snnipets/Loading';\nimport validLogin from '../assets/utils/ValidLogin';\nimport { postData } from '../assets/utils/fetchData';\nimport Link from 'next/link';\nimport Cookie from 'js-cookie';\nimport { useRouter } from 'next/router';\n\nfunction Login() {\n  const {\n    0: state,\n    1: dispatch\n  } = useContext(DataContext);\n  const {\n    loading\n  } = state;\n  const {\n    userData\n  } = state;\n  const {\n    auth\n  } = state;\n  const {\n    0: submitStatus,\n    1: setSubmitStatus\n  } = useState({\n    emailMessage: '',\n    passwordMessage: '',\n    emailNotExist: ''\n  });\n  const {\n    email,\n    password\n  } = userData;\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    dispatch({\n      type: ACTION.UPDATE_USER_DATA,\n      payload: {\n        [name]: value\n      }\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      emailMessage,\n      passwordMessage\n    } = validLogin(userData.email, userData.password);\n    setSubmitStatus({\n      emailMessage: emailMessage,\n      passwordMessage: passwordMessage\n    });\n\n    if (emailMessage || passwordMessage) {\n      return;\n    }\n\n    return;\n    dispatch({\n      type: ACTION.START_LOADING\n    });\n    const res = await postData('/api/auth/login', userData);\n    dispatch({\n      type: ACTION.END_LOADING\n    });\n    setSubmitStatus({\n      emailNotExist: res.emailMessage,\n      wrongPassword: res.passwordMessage\n    });\n\n    if (res.emailMessage || res.passwordMessage) {\n      return;\n    }\n\n    if (res.err) {\n      alert(res.err);\n      return;\n    }\n\n    Cookie.set('refreshToken', res.refreshToken, {\n      path: '/api/auth/accessToken',\n      expires: 25\n    });\n    localStorage.setItem('firstLogin', true); //set new auth\n\n    const new_auth = await fetch('http://localhost:3000/api/auth/accessToken', {\n      method: 'GET'\n    });\n    const data = await new_auth.json();\n    dispatch({\n      type: ACTION.AUTH,\n      payload: {\n        token: data.accessToken,\n        user: data.user\n      }\n    });\n  };\n\n  useEffect(() => {\n    dispatch({\n      type: ACTION.UPDATE_USER_DATA,\n      payload: {\n        email: '',\n        password: ''\n      }\n    });\n  }, []);\n  const router = useRouter();\n  useEffect(() => {\n    console.log(auth);\n    if (Object.keys(auth).length !== 0) router.push('/');\n  }, [auth]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"HOME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container text-center p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"d-block\",\n        onSubmit: handleSubmit,\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"d-block\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\" //aria-describedby=\"emailHelp\" \n            ,\n            name: \"email\",\n            onChange: handleInputChange,\n            value: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), submitStatus.emailMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: submitStatus.emailMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 37\n          }, this) : submitStatus.emailNotExist ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [submitStatus.emailNotExist, \". Deseja se \", /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/registrar\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                onClick: () => dispatch({\n                  type: ACTION.UPDATE_USER_DATA,\n                  payload: {\n                    password: \"\"\n                  }\n                }),\n                children: \"cadastrar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 51\n            }, this), \"?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 41\n          }, this) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"d-block\",\n            children: \"Senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            onChange: handleInputChange,\n            value: password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), submitStatus.passwordMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: submitStatus.passwordMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 37\n          }, this) : submitStatus.wrongPassword ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: submitStatus.wrongPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 41\n          }, this) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 41\n            }, this)\n          }, void 0, false) : 'ENTRAR'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Andrey luiz/Desktop/MUFASA/mufasa_vercel/pages/entrar.js"],"names":["React","useState","useContext","useEffect","DataContext","ACTION","Loading","validLogin","postData","Link","Cookie","useRouter","Login","state","dispatch","loading","userData","auth","submitStatus","setSubmitStatus","emailMessage","passwordMessage","emailNotExist","email","password","handleInputChange","e","name","value","target","type","UPDATE_USER_DATA","payload","handleSubmit","preventDefault","START_LOADING","res","END_LOADING","wrongPassword","err","alert","set","refreshToken","path","expires","localStorage","setItem","new_auth","fetch","method","data","json","AUTH","token","accessToken","user","router","console","log","Object","keys","length","push"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\r\nimport { DataContext } from '../store/GlobalState'\r\nimport ACTION from '../store/Actions'\r\nimport Loading from '../snnipets/Loading'\r\nimport validLogin from '../assets/utils/ValidLogin';\r\nimport { postData } from '../assets/utils/fetchData';\r\nimport Link from 'next/link'\r\nimport Cookie from 'js-cookie'\r\nimport { useRouter } from 'next/router'\r\n\r\nfunction Login() {\r\n\r\n    const [state, dispatch] = useContext(DataContext);\r\n    const { loading } = state\r\n    const { userData } = state\r\n    const { auth } = state\r\n\r\n    const [submitStatus, setSubmitStatus] = useState({\r\n        emailMessage: '',\r\n        passwordMessage: '',\r\n        emailNotExist: '',\r\n    })\r\n\r\n    const { email, password } = userData\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        dispatch({\r\n            type: ACTION.UPDATE_USER_DATA,\r\n            payload: { [name]: value }\r\n        });\r\n    }\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n\r\n        const { emailMessage, passwordMessage } = validLogin(userData.email, userData.password)\r\n\r\n        setSubmitStatus({\r\n            emailMessage: emailMessage,\r\n            passwordMessage: passwordMessage,\r\n        })\r\n\r\n        if (emailMessage || passwordMessage) {\r\n            return\r\n        }\r\n\r\n        return\r\n\r\n        dispatch({ type: ACTION.START_LOADING, });\r\n        const res = await postData('/api/auth/login', userData);\r\n        dispatch({ type: ACTION.END_LOADING, });\r\n\r\n        setSubmitStatus({\r\n            emailNotExist: res.emailMessage,\r\n            wrongPassword: res.passwordMessage,\r\n        })\r\n\r\n        if (res.emailMessage || res.passwordMessage) {\r\n            return\r\n        }\r\n\r\n        if (res.err) {\r\n            alert(res.err)\r\n            return\r\n        }\r\n\r\n        Cookie.set('refreshToken', res.refreshToken, {\r\n            path: '/api/auth/accessToken',\r\n            expires: 25\r\n        })\r\n        localStorage.setItem('firstLogin', true)\r\n\r\n        //set new auth\r\n        const new_auth = await fetch('http://localhost:3000/api/auth/accessToken', {\r\n            method: 'GET',\r\n        })\r\n        const data = await new_auth.json()\r\n\r\n        dispatch({\r\n            type: ACTION.AUTH,\r\n            payload: {\r\n                token: data.accessToken,\r\n                user: data.user\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: ACTION.UPDATE_USER_DATA,\r\n            payload: {\r\n                email: '',\r\n                password: '',\r\n            }\r\n        });\r\n    }, [])\r\n\r\n    const router = useRouter()\r\n\r\n    useEffect(() => {\r\n        console.log(auth)\r\n        if (Object.keys(auth).length !== 0) router.push('/')\r\n    }, [auth])\r\n\r\n    return (\r\n        <>\r\n\r\n            <div><Link href=\"/\"><a>HOME</a></Link></div>\r\n\r\n            <div className=\"container text-center p-4\">\r\n                <form className=\"d-block\" onSubmit={handleSubmit} noValidate>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\" className=\"d-block\">Email</label>\r\n                        <input type=\"email\" id=\"email\"\r\n                            //aria-describedby=\"emailHelp\" \r\n                            name=\"email\"\r\n                            onChange={handleInputChange} value={email}\r\n                        />\r\n                        {\r\n                            submitStatus.emailMessage ?\r\n                                (\r\n                                    <p>{submitStatus.emailMessage}</p>\r\n                                ) : submitStatus.emailNotExist ?\r\n                                    (\r\n                                        <p>\r\n                                            {submitStatus.emailNotExist}.\r\n                                        Deseja se <Link href=\"/registrar\">\r\n                                                <a\r\n                                                    onClick={() => dispatch({ type: ACTION.UPDATE_USER_DATA, payload: { password: \"\" } })}\r\n                                                >\r\n                                                    cadastrar\r\n                                                </a>\r\n                                            </Link>?\r\n                                        </p>\r\n                                    ) : (\r\n                                        ''\r\n                                    )\r\n                        }\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\" className=\"d-block\">Senha</label>\r\n                        <input type=\"password\" id=\"password\" name=\"password\"\r\n                            onChange={handleInputChange} value={password} />\r\n                        {\r\n                            submitStatus.passwordMessage ?\r\n                                (\r\n                                    <p>{submitStatus.passwordMessage}</p>\r\n                                ) : submitStatus.wrongPassword ?\r\n                                    (\r\n                                        <p>{submitStatus.wrongPassword}</p>\r\n                                    ) :\r\n                                    (\r\n                                        ''\r\n                                    )\r\n                        }\r\n                    </div>\r\n                    <button type=\"submit\">\r\n                        {\r\n                            loading ?\r\n                                (\r\n                                    <>\r\n                                        <Loading />\r\n                                    </>\r\n                                ) : (\r\n                                    'ENTRAR'\r\n                                )\r\n                        }\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}