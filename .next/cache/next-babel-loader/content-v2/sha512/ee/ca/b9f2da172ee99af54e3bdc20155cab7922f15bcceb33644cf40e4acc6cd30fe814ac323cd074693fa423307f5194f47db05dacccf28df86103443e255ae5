{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n//const baseURL = process.env.BASE_URL\nvar baseURL = '/';\nexport var getData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url, token) {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!token) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 3;\n            return fetch(\"\".concat(baseURL).concat(url), {\n              method: 'GET',\n              headers: {\n                'Authorization': token\n              }\n            });\n\n          case 3:\n            res = _context.sent;\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.next = 8;\n            return fetch(\"\".concat(baseURL).concat(url), {\n              method: 'GET'\n            });\n\n          case 8:\n            res = _context.sent;\n\n          case 9:\n            _context.next = 11;\n            return res.json();\n\n          case 11:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getData(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var postData = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(url, post, token) {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!token) {\n              _context2.next = 6;\n              break;\n            }\n\n            _context2.next = 3;\n            return fetch(\"\".concat(baseURL).concat(url), {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': token\n              },\n              body: JSON.stringify(post)\n            });\n\n          case 3:\n            res = _context2.sent;\n            _context2.next = 9;\n            break;\n\n          case 6:\n            _context2.next = 8;\n            return fetch(\"\".concat(baseURL).concat(url), {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(post)\n            });\n\n          case 8:\n            res = _context2.sent;\n\n          case 9:\n            _context2.next = 11;\n            return res.json();\n\n          case 11:\n            data = _context2.sent;\n            console.log(data);\n            return _context2.abrupt(\"return\", data);\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function postData(_x3, _x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var putData = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(url, post, token) {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!token) {\n              _context3.next = 6;\n              break;\n            }\n\n            _context3.next = 3;\n            return fetch(\"\".concat(baseURL).concat(url), {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': token\n              },\n              body: JSON.stringify(post)\n            });\n\n          case 3:\n            res = _context3.sent;\n            _context3.next = 9;\n            break;\n\n          case 6:\n            _context3.next = 8;\n            return fetch(\"\".concat(baseURL).concat(url), {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(post)\n            });\n\n          case 8:\n            res = _context3.sent;\n\n          case 9:\n            _context3.next = 11;\n            return res.json();\n\n          case 11:\n            data = _context3.sent;\n            return _context3.abrupt(\"return\", data);\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function putData(_x6, _x7, _x8) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var patchData = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(url, post, token) {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (!token) {\n              _context4.next = 6;\n              break;\n            }\n\n            _context4.next = 3;\n            return fetch(\"\".concat(baseURL).concat(url), {\n              method: 'PATCH',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': token\n              },\n              body: JSON.stringify(post)\n            });\n\n          case 3:\n            res = _context4.sent;\n            _context4.next = 9;\n            break;\n\n          case 6:\n            _context4.next = 8;\n            return fetch(\"\".concat(baseURL).concat(url), {\n              method: 'PATCH',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(post)\n            });\n\n          case 8:\n            res = _context4.sent;\n\n          case 9:\n            _context4.next = 11;\n            return res.json();\n\n          case 11:\n            data = _context4.sent;\n            return _context4.abrupt(\"return\", data);\n\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function patchData(_x9, _x10, _x11) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var deleteData = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(url, token) {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return fetch(\"\".concat(baseURL).concat(url), {\n              method: 'DELETE',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': token\n              }\n            });\n\n          case 2:\n            res = _context5.sent;\n            _context5.next = 5;\n            return res.json();\n\n          case 5:\n            data = _context5.sent;\n            return _context5.abrupt(\"return\", data);\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function deleteData(_x12, _x13) {\n    return _ref5.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/gusta/Pessoal/Mufasa/mufasa_vercel/assets/utils/fetchData.js"],"names":["baseURL","getData","url","token","fetch","method","headers","res","json","data","postData","post","body","JSON","stringify","console","log","putData","patchData","deleteData"],"mappings":"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","sourcesContent":["//const baseURL = process.env.BASE_URL\r\nconst baseURL = '/'\r\n\r\nexport const getData = async (url, token) => {\r\n    let res\r\n    if (token) {\r\n        res = await fetch(`${baseURL}${url}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': token,\r\n            }\r\n        })\r\n    } else {\r\n        res = await fetch(`${baseURL}${url}`, {\r\n            method: 'GET',\r\n        })\r\n    }\r\n\r\n    const data = await res.json();\r\n    return data\r\n}\r\n\r\nexport const postData = async (url, post, token) => {\r\n    let res\r\n    if (token) {\r\n        res = await fetch(`${baseURL}${url}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token\r\n            },\r\n            body: JSON.stringify(post)\r\n        })\r\n    } else {\r\n        res = await fetch(`${baseURL}${url}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(post)\r\n        })\r\n    }\r\n    const data = await res.json();\r\n    console.log(data)\r\n    return data\r\n}\r\n\r\nexport const putData = async (url, post, token) => {\r\n\r\n    let res\r\n    if (token) {\r\n        res = await fetch(`${baseURL}${url}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token\r\n            },\r\n            body: JSON.stringify(post)\r\n        })\r\n    } else {\r\n        res = await fetch(`${baseURL}${url}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(post)\r\n        })\r\n    }\r\n\r\n    const data = await res.json();\r\n    return data\r\n}\r\n\r\nexport const patchData = async (url, post, token) => {\r\n\r\n    let res\r\n    if (token) {\r\n        res = await fetch(`${baseURL}${url}`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token\r\n            },\r\n            body: JSON.stringify(post)\r\n        })\r\n    } else {\r\n        res = await fetch(`${baseURL}${url}`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(post)\r\n        })\r\n    }\r\n\r\n    const data = await res.json();\r\n    return data\r\n}\r\n\r\nexport const deleteData = async (url, token) => {\r\n\r\n    let res = await fetch(`${baseURL}${url}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        }\r\n    })\r\n\r\n    const data = await res.json();\r\n    return data\r\n}"]},"metadata":{},"sourceType":"module"}