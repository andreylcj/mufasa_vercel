{"ast":null,"code":"var validCpfAuth = function validCpfAuth(cpf, password) {\n  if (!cpf && !password) {\n    return {\n      cpfMsg: 'Por favor, preencha seu CPF',\n      passwordMsg: 'Por favor, preencha sua senha'\n    };\n  }\n\n  if (!cpf) {\n    return {\n      cpfMsg: 'Por favor, preencha seu CPF',\n      passwordMsg: ''\n    };\n  }\n\n  if (!password) {\n    return {\n      emailMessage: '',\n      passwordMsg: 'Por favor, preencha sua senha'\n    };\n  }\n\n  if (TestaCPF(cpf)) {\n    return {\n      cpfMsg: 'Cpf v치lido',\n      validate: true\n    };\n  }\n\n  return {\n    cpfMsg: 'Por favor, insira um CPF v치lido',\n    validate: false\n  };\n};\n\nfunction TestaCPF(strCPF) {\n  // eslint-disable-next-line no-param-reassign\n  strCPF = strCPF.split('.').join('').split('-').join('');\n  var Soma;\n  var Resto;\n  Soma = 0;\n  if (strCPF === '00000000000') return false;\n\n  for (var i = 1; i <= 9; i++) {\n    Soma += parseInt(strCPF.substring(i - 1, i), 10) * (11 - i);\n  }\n\n  Resto = Soma * 10 % 11;\n  if (Resto === 10 || Resto === 11) Resto = 0;\n  if (Resto !== parseInt(strCPF.substring(9, 10), 10)) return false;\n  Soma = 0;\n\n  for (var _i = 1; _i <= 10; _i++) {\n    Soma += parseInt(strCPF.substring(_i - 1, _i), 10) * (12 - _i);\n  }\n\n  Resto = Soma * 10 % 11;\n  if (Resto === 10 || Resto === 11) Resto = 0;\n  if (Resto !== parseInt(strCPF.substring(10, 11), 10)) return false;\n  return true;\n}\n\n_c = TestaCPF;\nexport default validCpfAuth;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestaCPF\");","map":{"version":3,"sources":["C:/Users/gusta/Pessoal/Mufasa/mufasa_vercel/assets/utils/ValidateData/ValidCpf.js"],"names":["validCpfAuth","cpf","password","cpfMsg","passwordMsg","emailMessage","TestaCPF","validate","strCPF","split","join","Soma","Resto","i","parseInt","substring"],"mappings":"AAAA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAMC,QAAN,EAAmB;AACtC,MAAI,CAACD,GAAD,IAAQ,CAACC,QAAb,EAAuB;AACrB,WAAO;AACLC,MAAAA,MAAM,EAAE,6BADH;AAELC,MAAAA,WAAW,EAAE;AAFR,KAAP;AAID;;AAED,MAAI,CAACH,GAAL,EAAU;AACR,WAAO;AACLE,MAAAA,MAAM,EAAE,6BADH;AAELC,MAAAA,WAAW,EAAE;AAFR,KAAP;AAID;;AAED,MAAI,CAACF,QAAL,EAAe;AACb,WAAO;AACLG,MAAAA,YAAY,EAAE,EADT;AAELD,MAAAA,WAAW,EAAE;AAFR,KAAP;AAID;;AAED,MAAIE,QAAQ,CAACL,GAAD,CAAZ,EAAmB;AACjB,WACE;AACEE,MAAAA,MAAM,EAAE,YADV;AAEEI,MAAAA,QAAQ,EAAE;AAFZ,KADF;AAMD;;AAED,SACE;AACEJ,IAAAA,MAAM,EAAE,iCADV;AAEEI,IAAAA,QAAQ,EAAE;AAFZ,GADF;AAMD,CArCD;;AAuCA,SAASD,QAAT,CAAkBE,MAAlB,EAA0B;AACxB;AACAA,EAAAA,MAAM,GAAGA,MAAM,CAACC,KAAP,CAAa,GAAb,EAAkBC,IAAlB,CAAuB,EAAvB,EAA2BD,KAA3B,CAAiC,GAAjC,EAAsCC,IAAtC,CAA2C,EAA3C,CAAT;AAEA,MAAIC,IAAJ;AACA,MAAIC,KAAJ;AACAD,EAAAA,IAAI,GAAG,CAAP;AACA,MAAIH,MAAM,KAAK,aAAf,EAA8B,OAAO,KAAP;;AAE9B,OAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB;AAA6BF,IAAAA,IAAI,IAAIG,QAAQ,CAACN,MAAM,CAACO,SAAP,CAAiBF,CAAC,GAAG,CAArB,EAAwBA,CAAxB,CAAD,EAA6B,EAA7B,CAAR,IAA4C,KAAKA,CAAjD,CAAR;AAA7B;;AACAD,EAAAA,KAAK,GAAID,IAAI,GAAG,EAAR,GAAc,EAAtB;AAEA,MAAKC,KAAK,KAAK,EAAX,IAAmBA,KAAK,KAAK,EAAjC,EAAsCA,KAAK,GAAG,CAAR;AACtC,MAAIA,KAAK,KAAKE,QAAQ,CAACN,MAAM,CAACO,SAAP,CAAiB,CAAjB,EAAoB,EAApB,CAAD,EAA0B,EAA1B,CAAtB,EAAqD,OAAO,KAAP;AAErDJ,EAAAA,IAAI,GAAG,CAAP;;AACA,OAAK,IAAIE,EAAC,GAAG,CAAb,EAAgBA,EAAC,IAAI,EAArB,EAAyBA,EAAC,EAA1B;AAA8BF,IAAAA,IAAI,IAAIG,QAAQ,CAACN,MAAM,CAACO,SAAP,CAAiBF,EAAC,GAAG,CAArB,EAAwBA,EAAxB,CAAD,EAA6B,EAA7B,CAAR,IAA4C,KAAKA,EAAjD,CAAR;AAA9B;;AACAD,EAAAA,KAAK,GAAID,IAAI,GAAG,EAAR,GAAc,EAAtB;AAEA,MAAKC,KAAK,KAAK,EAAX,IAAmBA,KAAK,KAAK,EAAjC,EAAsCA,KAAK,GAAG,CAAR;AACtC,MAAIA,KAAK,KAAKE,QAAQ,CAACN,MAAM,CAACO,SAAP,CAAiB,EAAjB,EAAqB,EAArB,CAAD,EAA2B,EAA3B,CAAtB,EAAsD,OAAO,KAAP;AACtD,SAAO,IAAP;AACD;;KAtBQT,Q;AAwBT,eAAeN,YAAf","sourcesContent":["const validCpfAuth = (cpf, password) => {\r\n  if (!cpf && !password) {\r\n    return {\r\n      cpfMsg: 'Por favor, preencha seu CPF',\r\n      passwordMsg: 'Por favor, preencha sua senha',\r\n    };\r\n  }\r\n\r\n  if (!cpf) {\r\n    return {\r\n      cpfMsg: 'Por favor, preencha seu CPF',\r\n      passwordMsg: '',\r\n    };\r\n  }\r\n\r\n  if (!password) {\r\n    return {\r\n      emailMessage: '',\r\n      passwordMsg: 'Por favor, preencha sua senha',\r\n    };\r\n  }\r\n\r\n  if (TestaCPF(cpf)) {\r\n    return (\r\n      {\r\n        cpfMsg: 'Cpf v치lido',\r\n        validate: true,\r\n      }\r\n    );\r\n  }\r\n\r\n  return (\r\n    {\r\n      cpfMsg: 'Por favor, insira um CPF v치lido',\r\n      validate: false,\r\n    }\r\n  );\r\n};\r\n\r\nfunction TestaCPF(strCPF) {\r\n  // eslint-disable-next-line no-param-reassign\r\n  strCPF = strCPF.split('.').join('').split('-').join('');\r\n\r\n  let Soma;\r\n  let Resto;\r\n  Soma = 0;\r\n  if (strCPF === '00000000000') return false;\r\n\r\n  for (let i = 1; i <= 9; i++) Soma += parseInt(strCPF.substring(i - 1, i), 10) * (11 - i);\r\n  Resto = (Soma * 10) % 11;\r\n\r\n  if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n  if (Resto !== parseInt(strCPF.substring(9, 10), 10)) return false;\r\n\r\n  Soma = 0;\r\n  for (let i = 1; i <= 10; i++) Soma += parseInt(strCPF.substring(i - 1, i), 10) * (12 - i);\r\n  Resto = (Soma * 10) % 11;\r\n\r\n  if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n  if (Resto !== parseInt(strCPF.substring(10, 11), 10)) return false;\r\n  return true;\r\n}\r\n\r\nexport default validCpfAuth;\r\n"]},"metadata":{},"sourceType":"module"}