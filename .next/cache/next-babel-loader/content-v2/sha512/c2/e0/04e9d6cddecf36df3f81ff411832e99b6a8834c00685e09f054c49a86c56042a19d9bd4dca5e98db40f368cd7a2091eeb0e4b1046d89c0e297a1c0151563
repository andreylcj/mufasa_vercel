{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\gusta\\\\Pessoal\\\\Mufasa\\\\mufasa_vercel\\\\pages\\\\registrar\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport Cookie from 'js-cookie';\nimport validRegister from '../../assets/utils/ValidateData/ValidRegister';\nimport Loading from '../../snnipets/Loading';\nimport { postData } from '../../assets/utils/fetchData';\nimport { ACTION } from '../../store/Actions';\nimport { DataContext } from '../../store/GlobalState';\n\nfunction Register() {\n  _s();\n\n  var _useContext = useContext(DataContext),\n      state = _useContext[0],\n      dispatch = _useContext[1];\n\n  var loading = state.loading;\n  var userData = state.userData;\n  var auth = state.auth;\n\n  var _useState = useState({\n    emailMessage: '',\n    passwordMessage: '',\n    emailAlreadyExist: ''\n  }),\n      submitStatus = _useState[0],\n      setSubmitStatus = _useState[1];\n\n  var email = userData.email,\n      password = userData.password;\n\n  var handleInputChange = function handleInputChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    dispatch({\n      type: ACTION.UPDATE_USER_DATA,\n      payload: _defineProperty({}, name, value)\n    });\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _validRegister, emailMessage, passwordMessage, res, new_auth, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _validRegister = validRegister(userData.email, userData.password), emailMessage = _validRegister.emailMessage, passwordMessage = _validRegister.passwordMessage;\n              setSubmitStatus({\n                emailMessage: emailMessage,\n                passwordMessage: passwordMessage\n              });\n\n              if (!(emailMessage || passwordMessage)) {\n                _context.next = 5;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 5:\n              dispatch({\n                type: ACTION.START_LOADING\n              });\n              _context.next = 8;\n              return postData('api/auth/register', userData);\n\n            case 8:\n              res = _context.sent;\n              dispatch({\n                type: ACTION.END_LOADING\n              });\n              setSubmitStatus({\n                emailAlreadyExist: res.emailMessage\n              });\n\n              if (!res.emailMessage) {\n                _context.next = 13;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 13:\n              Cookie.set('refreshToken', res.refreshToken, {\n                path: '/api/auth/accessToken',\n                expires: 25\n              });\n              localStorage.setItem('firstLogin', true); // set new auth\n\n              _context.next = 17;\n              return fetch('api/auth/accessToken', {\n                method: 'GET'\n              });\n\n            case 17:\n              new_auth = _context.sent;\n              _context.next = 20;\n              return new_auth.json();\n\n            case 20:\n              data = _context.sent;\n              dispatch({\n                type: ACTION.AUTH,\n                payload: {\n                  token: data.accessToken,\n                  user: data.user\n                }\n              });\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    dispatch({\n      type: ACTION.UPDATE_USER_DATA,\n      payload: {\n        email: '',\n        password: ''\n      }\n    });\n  }, []);\n  var router = useRouter();\n  useEffect(function () {\n    if (Object.keys(auth).length !== 0) router.push('/');\n  }, [auth]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"HOME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      noValidate: true,\n      className: \"mx-auto my-4\",\n      style: {\n        maxWidth: '500px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"form-label\",\n          children: \"E-mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"form-control\",\n          id: \"email\",\n          \"aria-describedby\": \"emailHelp\",\n          name: \"email\",\n          onChange: handleInputChange,\n          value: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"emailHelp\",\n          className: \"form-text\".concat(submitStatus.emailMessage || submitStatus.emailAlreadyExist ? ' text-danger' : ''),\n          children: submitStatus.emailMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: submitStatus.emailMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 33\n          }, this) : submitStatus.emailAlreadyExist ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [submitStatus.emailAlreadyExist, \". Deseja fazer\", /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/entrar\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"text-primary text-underline\",\n                onClick: function onClick() {\n                  return dispatch({\n                    type: ACTION.UPDATE_USER_DATA,\n                    payload: {\n                      password: ''\n                    }\n                  });\n                },\n                children: \"login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 37\n            }, this), \"?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 35\n          }, this) : 'Nós nunca vamos compartilhar seu e-mail com ninguém.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"form-label\",\n          children: \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"password\",\n          name: \"password\",\n          onChange: handleInputChange,\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"passwordHelp\",\n          className: \"form-text\".concat(submitStatus.passwordMessage ? ' text-danger' : ''),\n          children: submitStatus.passwordMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: submitStatus.passwordMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 33\n          }, this) : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary d-flex mx-auto\",\n        children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 31\n          }, this)\n        }, void 0, false) : 'CADASTRAR'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"O9kHN08a8MvBLbSY7eFVbWQHZo0=\", false, function () {\n  return [useRouter];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/gusta/Pessoal/Mufasa/mufasa_vercel/pages/registrar/index.js"],"names":["React","useState","useContext","useEffect","Link","useRouter","Cookie","validRegister","Loading","postData","ACTION","DataContext","Register","state","dispatch","loading","userData","auth","emailMessage","passwordMessage","emailAlreadyExist","submitStatus","setSubmitStatus","email","password","handleInputChange","e","target","name","value","type","UPDATE_USER_DATA","payload","handleSubmit","preventDefault","START_LOADING","res","END_LOADING","set","refreshToken","path","expires","localStorage","setItem","fetch","method","new_auth","json","data","AUTH","token","accessToken","user","router","Object","keys","length","push","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\nimport Cookie from 'js-cookie';\r\nimport validRegister from '../../assets/utils/ValidateData/ValidRegister';\r\nimport Loading from '../../snnipets/Loading';\r\nimport { postData } from '../../assets/utils/fetchData';\r\nimport { ACTION } from '../../store/Actions';\r\nimport { DataContext } from '../../store/GlobalState';\r\n\r\nfunction Register() {\r\n  const [state, dispatch] = useContext(DataContext);\r\n  const { loading } = state;\r\n  const { userData } = state;\r\n  const { auth } = state;\r\n\r\n  const [submitStatus, setSubmitStatus] = useState({\r\n    emailMessage: '',\r\n    passwordMessage: '',\r\n    emailAlreadyExist: '',\r\n  });\r\n\r\n  const { email, password } = userData;\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    dispatch({\r\n      type: ACTION.UPDATE_USER_DATA,\r\n      payload: { [name]: value },\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { emailMessage, passwordMessage } = validRegister(userData.email, userData.password);\r\n\r\n    setSubmitStatus({\r\n      emailMessage,\r\n      passwordMessage,\r\n    });\r\n\r\n    if (emailMessage || passwordMessage) {\r\n      return;\r\n    }\r\n\r\n    dispatch({ type: ACTION.START_LOADING });\r\n    const res = await postData('api/auth/register', userData);\r\n    dispatch({ type: ACTION.END_LOADING });\r\n\r\n    setSubmitStatus({\r\n      emailAlreadyExist: res.emailMessage,\r\n    });\r\n\r\n    if (res.emailMessage) return;\r\n\r\n    Cookie.set('refreshToken', res.refreshToken, {\r\n      path: '/api/auth/accessToken',\r\n      expires: 25,\r\n    });\r\n    localStorage.setItem('firstLogin', true);\r\n\r\n    // set new auth\r\n    const new_auth = await fetch('api/auth/accessToken', {\r\n      method: 'GET',\r\n    });\r\n    const data = await new_auth.json();\r\n\r\n    dispatch({\r\n      type: ACTION.AUTH,\r\n      payload: {\r\n        token: data.accessToken,\r\n        user: data.user,\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: ACTION.UPDATE_USER_DATA,\r\n      payload: {\r\n        email: '',\r\n        password: '',\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(auth).length !== 0) router.push('/');\r\n  }, [auth]);\r\n\r\n  return (\r\n\r\n    <div>\r\n\r\n      <div><Link href=\"/\"><a>HOME</a></Link></div>\r\n\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        noValidate\r\n        className=\"mx-auto my-4\"\r\n        style={{ maxWidth: '500px' }}\r\n      >\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"email\" className=\"form-label\">E-mail</label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            id=\"email\"\r\n            aria-describedby=\"emailHelp\"\r\n            name=\"email\"\r\n            onChange={handleInputChange}\r\n            value={email}\r\n          />\r\n          <div id=\"emailHelp\" className={`form-text${submitStatus.emailMessage || submitStatus.emailAlreadyExist ? ' text-danger' : ''}`}>\r\n            {\r\n                            submitStatus.emailMessage\r\n                              ? (\r\n                                <p>{submitStatus.emailMessage}</p>\r\n                              ) : submitStatus.emailAlreadyExist\r\n                                ? (\r\n                                  <p>\r\n                                    {submitStatus.emailAlreadyExist}\r\n                                    .\r\n                                    Deseja fazer\r\n                                    <Link href=\"/entrar\">\r\n                                      <a\r\n                                        className=\"text-primary text-underline\"\r\n                                        onClick={() => dispatch({ type: ACTION.UPDATE_USER_DATA, payload: { password: '' } })}\r\n                                      >\r\n                                        login\r\n                                      </a>\r\n                                    </Link>\r\n                                    ?\r\n                                  </p>\r\n                                ) : (\r\n                                  'Nós nunca vamos compartilhar seu e-mail com ninguém.'\r\n                                )\r\n                        }\r\n          </div>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"password\" className=\"form-label\">Senha</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            onChange={handleInputChange}\r\n            value={password}\r\n          />\r\n          <div id=\"passwordHelp\" className={`form-text${submitStatus.passwordMessage ? ' text-danger' : ''}`}>\r\n            {\r\n                            submitStatus.passwordMessage\r\n                              ? (\r\n                                <p>{submitStatus.passwordMessage}</p>\r\n                              )\r\n                              : (\r\n                                ''\r\n                              )\r\n                        }\r\n          </div>\r\n        </div>\r\n        {/*\r\n                    <div className=\"mb-3 form-check\">\r\n                    <input type=\"checkbox\" className=\"form-check-input\" id=\"checkMeOut\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"checkMeOut\">Lembrar de mim</label>\r\n                </div>\r\n                */}\r\n        <button type=\"submit\" className=\"btn btn-primary d-flex mx-auto\">\r\n          {\r\n                        loading\r\n                          ? (\r\n                            <>\r\n                              <Loading />\r\n                            </>\r\n                          ) : (\r\n                            'CADASTRAR'\r\n                          )\r\n                    }\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}