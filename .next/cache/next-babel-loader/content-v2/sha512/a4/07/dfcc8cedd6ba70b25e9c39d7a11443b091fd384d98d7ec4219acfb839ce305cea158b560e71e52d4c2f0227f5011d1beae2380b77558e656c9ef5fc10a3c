{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Andrey luiz\\\\Desktop\\\\MUFASA\\\\mufasa_vercel\\\\store\\\\GlobalState.js\";\nimport React, { createContext, useEffect, useReducer } from 'react';\nimport reducers from './Reducers';\nimport ACTION from '../store/Actions';\nimport { getData } from '../assets/utils/fetchData';\nexport const DataContext = /*#__PURE__*/createContext();\nexport const initialState = {\n  auth: {},\n  notify: {},\n  loading: false,\n  userData: {\n    email: '',\n    password: ''\n  },\n  users: []\n};\nexport const DataProvider = ({\n  children\n}) => {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducers, initialState);\n  const {\n    auth\n  } = state; // AUTH\n\n  useEffect(async () => {\n    const firstLogin = localStorage.getItem('firstLogin');\n\n    if (firstLogin) {\n      const res = await getData('api/auth/accessToken');\n      dispatch({\n        type: ACTION.AUTH,\n        payload: {\n          token: res.accessToken,\n          user: res.user\n        }\n      });\n    }\n  }, []); // USERS\n\n  useEffect(async () => {\n    if (auth.token) {\n      if (auth.user.role === 'admin' || auth.user.role === 'master admin') {\n        getData('api/user', auth.token).then(res => {\n          if (res.err) return dispatch({\n            type: 'NOTIFY',\n            payload: {\n              error: res.err\n            }\n          });\n          dispatch({\n            type: 'ADD_USERS',\n            payload: res.users\n          });\n        });\n      }\n    } else {\n      dispatch({\n        type: 'ADD_USERS',\n        payload: []\n      });\n    }\n  }, [auth.token]);\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: [state, dispatch],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/Andrey luiz/Desktop/MUFASA/mufasa_vercel/store/GlobalState.js"],"names":["React","createContext","useEffect","useReducer","reducers","ACTION","getData","DataContext","initialState","auth","notify","loading","userData","email","password","users","DataProvider","children","state","dispatch","firstLogin","localStorage","getItem","res","type","AUTH","payload","token","accessToken","user","role","then","err","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,UAA1C,QAA4D,OAA5D;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AAEA,OAAO,MAAMC,WAAW,gBAAGN,aAAa,EAAjC;AAEP,OAAO,MAAMO,YAAY,GAAG;AACxBC,EAAAA,IAAI,EAAE,EADkB;AAIxBC,EAAAA,MAAM,EAAE,EAJgB;AAOxBC,EAAAA,OAAO,EAAE,KAPe;AAQxBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAE,EADD;AAENC,IAAAA,QAAQ,EAAE;AAFJ,GARc;AAYxBC,EAAAA,KAAK,EAAE;AAZiB,CAArB;AAiBP,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAE1C,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBhB,UAAU,CAACC,QAAD,EAAWI,YAAX,CAApC;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAWS,KAAjB,CAJ0C,CAM1C;;AACAhB,EAAAA,SAAS,CAAC,YAAY;AAClB,UAAMkB,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAnB;;AACA,QAAIF,UAAJ,EAAgB;AACZ,YAAMG,GAAG,GAAG,MAAMjB,OAAO,CAAC,sBAAD,CAAzB;AAEAa,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEnB,MAAM,CAACoB,IADR;AAELC,QAAAA,OAAO,EAAE;AACLC,UAAAA,KAAK,EAAEJ,GAAG,CAACK,WADN;AAELC,UAAAA,IAAI,EAAEN,GAAG,CAACM;AAFL;AAFJ,OAAD,CAAR;AAOH;AACJ,GAbQ,EAaN,EAbM,CAAT,CAP0C,CAsB1C;;AACA3B,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAIO,IAAI,CAACkB,KAAT,EAAgB;AACZ,UAAIlB,IAAI,CAACoB,IAAL,CAAUC,IAAV,KAAmB,OAAnB,IAA8BrB,IAAI,CAACoB,IAAL,CAAUC,IAAV,KAAmB,cAArD,EAAqE;AACjExB,QAAAA,OAAO,CAAC,UAAD,EAAaG,IAAI,CAACkB,KAAlB,CAAP,CACKI,IADL,CACUR,GAAG,IAAI;AACT,cAAIA,GAAG,CAACS,GAAR,EAAa,OAAOb,QAAQ,CAAC;AAAEK,YAAAA,IAAI,EAAE,QAAR;AAAkBE,YAAAA,OAAO,EAAE;AAAEO,cAAAA,KAAK,EAAEV,GAAG,CAACS;AAAb;AAA3B,WAAD,CAAf;AACbb,UAAAA,QAAQ,CAAC;AAAEK,YAAAA,IAAI,EAAE,WAAR;AAAqBE,YAAAA,OAAO,EAAEH,GAAG,CAACR;AAAlC,WAAD,CAAR;AACH,SAJL;AAKH;AACJ,KARD,MAQO;AACHI,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAE,WAAR;AAAqBE,QAAAA,OAAO,EAAE;AAA9B,OAAD,CAAR;AACH;AACJ,GAZQ,EAYN,CAACjB,IAAI,CAACkB,KAAN,CAZM,CAAT;AAeA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,CAACT,KAAD,EAAQC,QAAR,CAA7B;AAAA,cACKF;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA5CM","sourcesContent":["import React, { createContext, useEffect, useReducer } from 'react'\r\nimport reducers from './Reducers'\r\nimport ACTION from '../store/Actions'\r\nimport { getData } from '../assets/utils/fetchData'\r\n\r\nexport const DataContext = createContext();\r\n\r\nexport const initialState = {\r\n    auth: {\r\n\r\n    },\r\n    notify: {\r\n\r\n    },\r\n    loading: false,\r\n    userData: {\r\n        email: '',\r\n        password: '',\r\n    },\r\n    users: [\r\n\r\n    ],\r\n}\r\n\r\nexport const DataProvider = ({ children }) => {\r\n\r\n    const [state, dispatch] = useReducer(reducers, initialState)\r\n\r\n    const { auth } = state\r\n\r\n    // AUTH\r\n    useEffect(async () => {\r\n        const firstLogin = localStorage.getItem('firstLogin')\r\n        if (firstLogin) {\r\n            const res = await getData('api/auth/accessToken')\r\n\r\n            dispatch({\r\n                type: ACTION.AUTH,\r\n                payload: {\r\n                    token: res.accessToken,\r\n                    user: res.user\r\n                }\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    // USERS\r\n    useEffect(async () => {\r\n        if (auth.token) {\r\n            if (auth.user.role === 'admin' || auth.user.role === 'master admin') {\r\n                getData('api/user', auth.token)\r\n                    .then(res => {\r\n                        if (res.err) return dispatch({ type: 'NOTIFY', payload: { error: res.err } })\r\n                        dispatch({ type: 'ADD_USERS', payload: res.users })\r\n                    })\r\n            }\r\n        } else {\r\n            dispatch({ type: 'ADD_USERS', payload: [] })\r\n        }\r\n    }, [auth.token])\r\n\r\n\r\n    return (\r\n        <DataContext.Provider value={[state, dispatch]}>\r\n            {children}\r\n        </DataContext.Provider>\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}