{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport jwt from 'jsonwebtoken';\nimport Users from '../models/UserModel';\n\nvar auth = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(req, res) {\n    var token, decoded, user;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            token = req.headers.authorization;\n\n            if (token) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.status(400).json({\n              err: 'Autenticação inválida: Não existe token'\n            }));\n\n          case 3:\n            decoded = jwt.verify(token, process.env.ACCESS_TOKEN_SECRET);\n\n            if (decoded) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.status(400).json({\n              err: 'Autenticação inválida: Token inválido'\n            }));\n\n          case 6:\n            _context.next = 8;\n            return Users.findOne({\n              _id: decoded.id\n            });\n\n          case 8:\n            user = _context.sent;\n            return _context.abrupt(\"return\", user);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function auth(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default auth;","map":{"version":3,"sources":["C:/Users/gusta/Pessoal/Mufasa/mufasa_vercel/assets/middleware/auth.js"],"names":["jwt","Users","auth","req","res","token","headers","authorization","status","json","err","decoded","verify","process","env","ACCESS_TOKEN_SECRET","findOne","_id","id","user"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,IAAMC,IAAI;AAAA,sEAAG,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACLC,YAAAA,KADK,GACGF,GAAG,CAACG,OAAJ,CAAYC,aADf;;AAAA,gBAENF,KAFM;AAAA;AAAA;AAAA;;AAAA,6CAEQD,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,GAAG,EAAE;AAAP,aAArB,CAFR;;AAAA;AAILC,YAAAA,OAJK,GAIKX,GAAG,CAACY,MAAJ,CAAWP,KAAX,EAAkBQ,OAAO,CAACC,GAAR,CAAYC,mBAA9B,CAJL;;AAAA,gBAKNJ,OALM;AAAA;AAAA;AAAA;;AAAA,6CAKUP,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,GAAG,EAAE;AAAP,aAArB,CALV;;AAAA;AAAA;AAAA,mBAOQT,KAAK,CAACe,OAAN,CAAc;AAAEC,cAAAA,GAAG,EAAEN,OAAO,CAACO;AAAf,aAAd,CAPR;;AAAA;AAOLC,YAAAA,IAPK;AAAA,6CASJA,IATI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAJjB,IAAI;AAAA;AAAA;AAAA,GAAV;;AAYA,eAAeA,IAAf","sourcesContent":["import jwt from 'jsonwebtoken';\r\nimport Users from '../models/UserModel';\r\n\r\nconst auth = async (req, res) => {\r\n  const token = req.headers.authorization;\r\n  if (!token) return res.status(400).json({ err: 'Autenticação inválida: Não existe token' });\r\n\r\n  const decoded = jwt.verify(token, process.env.ACCESS_TOKEN_SECRET);\r\n  if (!decoded) return res.status(400).json({ err: 'Autenticação inválida: Token inválido' });\r\n\r\n  const user = await Users.findOne({ _id: decoded.id });\r\n\r\n  return user;\r\n};\r\n\r\nexport default auth;\r\n"]},"metadata":{},"sourceType":"module"}