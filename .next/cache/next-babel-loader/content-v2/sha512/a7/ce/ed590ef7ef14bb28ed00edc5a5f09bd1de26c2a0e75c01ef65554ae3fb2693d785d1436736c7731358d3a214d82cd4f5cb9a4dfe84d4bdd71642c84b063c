{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\gusta\\\\Pessoal\\\\Mufasa\\\\mufasa_vercel\\\\store\\\\GlobalState.js\";\nimport React, { createContext, useEffect, useReducer } from 'react';\nimport reducers from './Reducers';\nimport { ACTION } from './Actions';\nimport { getData } from '../assets/utils/fetchData';\nimport initialState from './InitialState';\nexport const DataContext = /*#__PURE__*/createContext();\nexport const DataProvider = ({\n  children\n}) => {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducers, initialState);\n  const {\n    auth\n  } = state; // AUTH\n\n  useEffect(async () => {\n    const firstLogin = localStorage.getItem('firstLogin');\n\n    if (firstLogin) {\n      const res = await getData('api/auth/accessToken');\n      dispatch({\n        type: ACTION.AUTH,\n        payload: {\n          token: res.accessToken,\n          user: res.user\n        }\n      });\n    }\n  }, []); // USERS\n\n  useEffect(async () => {\n    if (auth.token) {\n      if (auth.user.role === 'admin' || auth.user.role === 'master admin') {\n        getData('api/user', auth.token).then(res => {\n          if (res.err) return dispatch({\n            type: 'NOTIFY',\n            payload: {\n              error: res.err\n            }\n          });\n          dispatch({\n            type: 'ADD_USERS',\n            payload: res.users\n          });\n        });\n      }\n    } else {\n      dispatch({\n        type: 'ADD_USERS',\n        payload: []\n      });\n    }\n  }, [auth.token]);\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: [state, dispatch],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/gusta/Pessoal/Mufasa/mufasa_vercel/store/GlobalState.js"],"names":["React","createContext","useEffect","useReducer","reducers","ACTION","getData","initialState","DataContext","DataProvider","children","state","dispatch","auth","firstLogin","localStorage","getItem","res","type","AUTH","payload","token","accessToken","user","role","then","err","error","users"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,UAA1C,QAA4D,OAA5D;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAO,MAAMC,WAAW,gBAAGP,aAAa,EAAjC;AAEP,OAAO,MAAMQ,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC5C,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBT,UAAU,CAACC,QAAD,EAAWG,YAAX,CAApC;AAEA,QAAM;AAAEM,IAAAA;AAAF,MAAWF,KAAjB,CAH4C,CAK5C;;AACAT,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMY,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAnB;;AACA,QAAIF,UAAJ,EAAgB;AACd,YAAMG,GAAG,GAAG,MAAMX,OAAO,CAAC,sBAAD,CAAzB;AAEAM,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAEb,MAAM,CAACc,IADN;AAEPC,QAAAA,OAAO,EAAE;AACPC,UAAAA,KAAK,EAAEJ,GAAG,CAACK,WADJ;AAEPC,UAAAA,IAAI,EAAEN,GAAG,CAACM;AAFH;AAFF,OAAD,CAAR;AAOD;AACF,GAbQ,EAaN,EAbM,CAAT,CAN4C,CAqB5C;;AACArB,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIW,IAAI,CAACQ,KAAT,EAAgB;AACd,UAAIR,IAAI,CAACU,IAAL,CAAUC,IAAV,KAAmB,OAAnB,IAA8BX,IAAI,CAACU,IAAL,CAAUC,IAAV,KAAmB,cAArD,EAAqE;AACnElB,QAAAA,OAAO,CAAC,UAAD,EAAaO,IAAI,CAACQ,KAAlB,CAAP,CACGI,IADH,CACSR,GAAD,IAAS;AACb,cAAIA,GAAG,CAACS,GAAR,EAAa,OAAOd,QAAQ,CAAC;AAAEM,YAAAA,IAAI,EAAE,QAAR;AAAkBE,YAAAA,OAAO,EAAE;AAAEO,cAAAA,KAAK,EAAEV,GAAG,CAACS;AAAb;AAA3B,WAAD,CAAf;AACbd,UAAAA,QAAQ,CAAC;AAAEM,YAAAA,IAAI,EAAE,WAAR;AAAqBE,YAAAA,OAAO,EAAEH,GAAG,CAACW;AAAlC,WAAD,CAAR;AACD,SAJH;AAKD;AACF,KARD,MAQO;AACLhB,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAE,WAAR;AAAqBE,QAAAA,OAAO,EAAE;AAA9B,OAAD,CAAR;AACD;AACF,GAZQ,EAYN,CAACP,IAAI,CAACQ,KAAN,CAZM,CAAT;AAcA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,CAACV,KAAD,EAAQC,QAAR,CAA7B;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA1CM","sourcesContent":["import React, { createContext, useEffect, useReducer } from 'react';\r\nimport reducers from './Reducers';\r\nimport { ACTION } from './Actions';\r\nimport { getData } from '../assets/utils/fetchData';\r\nimport initialState from './InitialState';\r\n\r\nexport const DataContext = createContext();\r\n\r\nexport const DataProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducers, initialState);\r\n\r\n  const { auth } = state;\r\n\r\n  // AUTH\r\n  useEffect(async () => {\r\n    const firstLogin = localStorage.getItem('firstLogin');\r\n    if (firstLogin) {\r\n      const res = await getData('api/auth/accessToken');\r\n\r\n      dispatch({\r\n        type: ACTION.AUTH,\r\n        payload: {\r\n          token: res.accessToken,\r\n          user: res.user,\r\n        },\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  // USERS\r\n  useEffect(async () => {\r\n    if (auth.token) {\r\n      if (auth.user.role === 'admin' || auth.user.role === 'master admin') {\r\n        getData('api/user', auth.token)\r\n          .then((res) => {\r\n            if (res.err) return dispatch({ type: 'NOTIFY', payload: { error: res.err } });\r\n            dispatch({ type: 'ADD_USERS', payload: res.users });\r\n          });\r\n      }\r\n    } else {\r\n      dispatch({ type: 'ADD_USERS', payload: [] });\r\n    }\r\n  }, [auth.token]);\r\n\r\n  return (\r\n    <DataContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </DataContext.Provider>\r\n\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}