{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Andrey luiz\\\\Desktop\\\\MUFASA\\\\mufasa_vercel\\\\pages\\\\registrar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport validRegister from '../assets/utils/ValidRegister';\nimport Loading from '../snnipets/Loading';\nimport { postData } from '../assets/utils/fetchData';\nimport Link from 'next/link';\nimport ACTION from '../store/Actions';\nimport { DataContext } from '../store/GlobalState';\nimport { useRouter } from 'next/router';\n\nfunction Register() {\n  _s();\n\n  var _useContext = useContext(DataContext),\n      state = _useContext[0],\n      dispatch = _useContext[1];\n\n  var loading = state.loading;\n  var userData = state.userData;\n  var auth = state.auth;\n\n  var _useState = useState({\n    emailMessage: '',\n    passwordMessage: '',\n    emailAlreadyExist: ''\n  }),\n      submitStatus = _useState[0],\n      setSubmitStatus = _useState[1];\n\n  var email = userData.email,\n      password = userData.password;\n\n  var handleInputChange = function handleInputChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    dispatch({\n      type: ACTION.UPDATE_USER_DATA,\n      payload: _defineProperty({}, name, value)\n    });\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _validRegister, emailMessage, passwordMessage, res, new_auth, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _validRegister = validRegister(userData.email, userData.password), emailMessage = _validRegister.emailMessage, passwordMessage = _validRegister.passwordMessage;\n              setSubmitStatus({\n                emailMessage: emailMessage,\n                passwordMessage: passwordMessage\n              });\n\n              if (!(emailMessage || passwordMessage)) {\n                _context.next = 5;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 5:\n              return _context.abrupt(\"return\");\n\n            case 9:\n              res = _context.sent;\n              dispatch({\n                type: ACTION.END_LOADING\n              });\n              setSubmitStatus({\n                emailAlreadyExist: res.emailMessage\n              });\n\n              if (!res.emailMessage) {\n                _context.next = 14;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 14:\n              _context.next = 16;\n              return fetch('http://localhost:3000/api/auth/accessToken', {\n                method: 'GET'\n              });\n\n            case 16:\n              new_auth = _context.sent;\n              _context.next = 19;\n              return new_auth.json();\n\n            case 19:\n              data = _context.sent;\n              dispatch({\n                type: ACTION.AUTH,\n                payload: {\n                  token: data.accessToken,\n                  user: data.user\n                }\n              });\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    dispatch({\n      type: ACTION.UPDATE_USER_DATA,\n      payload: {\n        email: '',\n        password: ''\n      }\n    });\n  }, []);\n  var router = useRouter();\n  useEffect(function () {\n    if (Object.keys(auth).length !== 0) router.push('/');\n  }, [auth]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    className: \"mx-auto my-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      \"class\": \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        \"class\": \"form-label\",\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        \"class\": \"form-control\",\n        id: \"email\",\n        \"aria-describedby\": \"emailHelp\",\n        name: \"email\",\n        onChange: handleInputChange,\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), submitStatus.emailMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: submitStatus.emailMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }, this) : submitStatus.emailAlreadyExist ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [submitStatus.emailAlreadyExist, \". Deseja fazer \", /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/entrar\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: function onClick() {\n              return dispatch({\n                type: ACTION.UPDATE_USER_DATA,\n                payload: {\n                  password: \"\"\n                }\n              });\n            },\n            children: \"login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 54\n        }, this), \"?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 33\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"emailHelp\",\n        \"class\": \"form-text\",\n        children: \"We'll never share your email with anyone else.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      \"class\": \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        \"class\": \"form-label\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        \"class\": \"form-control\",\n        id: \"password\",\n        name: \"password\",\n        onChange: handleInputChange,\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), submitStatus.passwordMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: submitStatus.passwordMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      \"class\": \"mb-3 form-check\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        \"class\": \"form-check-input\",\n        id: \"checkMeOut\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        \"class\": \"form-check-label\",\n        htmlFor: \"checkMeOut\",\n        children: \"Check me out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      \"class\": \"btn btn-primary\",\n      children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 33\n        }, this)\n      }, void 0, false) : 'CADASTRAR'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"Gj6VhxuXgPPYbvLkf9vzSZlldsw=\", false, function () {\n  return [useRouter];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Andrey luiz/Desktop/MUFASA/mufasa_vercel/pages/registrar.js"],"names":["React","useState","useContext","useEffect","validRegister","Loading","postData","Link","ACTION","DataContext","useRouter","Register","state","dispatch","loading","userData","auth","emailMessage","passwordMessage","emailAlreadyExist","submitStatus","setSubmitStatus","email","password","handleInputChange","e","target","name","value","type","UPDATE_USER_DATA","payload","handleSubmit","preventDefault","res","END_LOADING","fetch","method","new_auth","json","data","AUTH","token","accessToken","user","router","Object","keys","length","push"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\r\nimport validRegister from '../assets/utils/ValidRegister'\r\nimport Loading from '../snnipets/Loading'\r\nimport { postData } from '../assets/utils/fetchData';\r\nimport Link from 'next/link';\r\nimport ACTION from '../store/Actions';\r\nimport { DataContext } from '../store/GlobalState';\r\nimport { useRouter } from 'next/router'\r\n\r\nfunction Register() {\r\n\r\n    const [state, dispatch] = useContext(DataContext);\r\n    const { loading } = state\r\n    const { userData } = state\r\n    const { auth } = state\r\n\r\n    const [submitStatus, setSubmitStatus] = useState({\r\n        emailMessage: '',\r\n        passwordMessage: '',\r\n        emailAlreadyExist: '',\r\n    })\r\n\r\n    const { email, password } = userData\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        dispatch({\r\n            type: ACTION.UPDATE_USER_DATA,\r\n            payload: { [name]: value }\r\n        });\r\n    }\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n\r\n        const { emailMessage, passwordMessage } = validRegister(userData.email, userData.password)\r\n\r\n        setSubmitStatus({\r\n            emailMessage: emailMessage,\r\n            passwordMessage: passwordMessage,\r\n        })\r\n\r\n        if (emailMessage || passwordMessage) {\r\n            return\r\n        }\r\n        return\r\n\r\n        dispatch({ type: ACTION.START_LOADING, });\r\n        const res = await postData('/api/auth/register', userData);\r\n        dispatch({ type: ACTION.END_LOADING, });\r\n\r\n        setSubmitStatus({\r\n            emailAlreadyExist: res.emailMessage,\r\n        })\r\n\r\n        if (res.emailMessage)\r\n            return\r\n\r\n        //set new auth\r\n        const new_auth = await fetch('http://localhost:3000/api/auth/accessToken', {\r\n            method: 'GET',\r\n        })\r\n        const data = await new_auth.json()\r\n\r\n        dispatch({\r\n            type: ACTION.AUTH,\r\n            payload: {\r\n                token: data.accessToken,\r\n                user: data.user\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: ACTION.UPDATE_USER_DATA,\r\n            payload: {\r\n                email: '',\r\n                password: '',\r\n            }\r\n        });\r\n    }, [])\r\n\r\n    const router = useRouter()\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(auth).length !== 0) router.push('/')\r\n    }, [auth])\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit} noValidate className=\"mx-auto my-4\">\r\n            <div class=\"mb-3\">\r\n                <label htmlFor=\"email\" class=\"form-label\">Email address</label>\r\n                <input type=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\"\r\n                    name=\"email\"\r\n                    onChange={handleInputChange} value={email}\r\n                />\r\n\r\n                {\r\n                    submitStatus.emailMessage ?\r\n                        (\r\n                            <p>{submitStatus.emailMessage}</p>\r\n                        ) : submitStatus.emailAlreadyExist ?\r\n                            (\r\n                                <p>\r\n                                    {submitStatus.emailAlreadyExist}.\r\n                                        Deseja fazer <Link href=\"/entrar\">\r\n                                        <a\r\n                                            onClick={() => dispatch({ type: ACTION.UPDATE_USER_DATA, payload: { password: \"\" } })}\r\n                                        >\r\n                                            login\r\n                                                </a>\r\n                                    </Link>?\r\n                                </p>\r\n                            ) : (\r\n                                ''\r\n                            )\r\n                }\r\n\r\n                <div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div>\r\n            </div>\r\n            <div class=\"mb-3\">\r\n                <label htmlFor=\"password\" class=\"form-label\">Password</label>\r\n                <input type=\"password\" class=\"form-control\" id=\"password\"\r\n                    name=\"password\"\r\n                    onChange={handleInputChange} value={password} />\r\n                {\r\n                    submitStatus.passwordMessage ?\r\n                        (\r\n                            <p>{submitStatus.passwordMessage}</p>\r\n                        ) :\r\n                        (\r\n                            ''\r\n                        )\r\n                }\r\n            </div>\r\n            <div class=\"mb-3 form-check\">\r\n                <input type=\"checkbox\" class=\"form-check-input\" id=\"checkMeOut\" />\r\n                <label class=\"form-check-label\" htmlFor=\"checkMeOut\">Check me out</label>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-primary\">\r\n                {\r\n                    loading ?\r\n                        (\r\n                            <>\r\n                                <Loading />\r\n                            </>\r\n                        ) : (\r\n                            'CADASTRAR'\r\n                        )\r\n                }\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Register\r\n"]},"metadata":{},"sourceType":"module"}