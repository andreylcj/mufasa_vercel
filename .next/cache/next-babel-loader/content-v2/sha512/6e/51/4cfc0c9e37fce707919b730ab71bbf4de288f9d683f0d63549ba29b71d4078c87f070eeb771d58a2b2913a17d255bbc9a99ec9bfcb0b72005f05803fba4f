{"ast":null,"code":"import connectDB from '../../../assets/utils/ConnectDB';\nimport auth from '../../../assets/middleware/auth';\nimport Users from '../../../assets/models/UserModel';\nconnectDB();\nexport default (async (req, res) => {\n  switch (req.method) {\n    case \"PATCH\":\n      await updateRole(req, res);\n      break;\n  }\n});\n\nconst updateRole = async (req, res) => {\n  try {\n    const result = await auth(req, res);\n    if (result.role !== 'admin' && result.role !== 'master admin') return res.status(400).json({\n      err: 'Autenticação inválida'\n    });\n    const {\n      id\n    } = req.query;\n    const {\n      role\n    } = req.body;\n    const admin = req.body === 'admin' || req.body === 'master admin' ? {\n      admin: true\n    } : {\n      admin: false\n    };\n    await Users.findOneAndUpdate({\n      _id: id\n    }, {\n      role,\n      admin\n    });\n    res.json({\n      msg: 'Update Success'\n    });\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Andrey luiz/Desktop/MUFASA/mufasa_vercel/pages/api/user/[id].js"],"names":["connectDB","auth","Users","req","res","method","updateRole","result","role","status","json","err","id","query","body","admin","findOneAndUpdate","_id","msg","message"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,iCAAtB;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AAEAF,SAAS;AAET,gBAAe,OAAOG,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,UAAQD,GAAG,CAACE,MAAZ;AACI,SAAK,OAAL;AACI,YAAMC,UAAU,CAACH,GAAD,EAAMC,GAAN,CAAhB;AACA;AAHR;AAKH,CAND;;AAQA,MAAME,UAAU,GAAG,OAAOH,GAAP,EAAYC,GAAZ,KAAoB;AACnC,MAAI;AAEA,UAAMG,MAAM,GAAG,MAAMN,IAAI,CAACE,GAAD,EAAMC,GAAN,CAAzB;AACA,QAAIG,MAAM,CAACC,IAAP,KAAgB,OAAhB,IAA2BD,MAAM,CAACC,IAAP,KAAgB,cAA/C,EAA+D,OAAOJ,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAArB,CAAP;AAE/D,UAAM;AAAEC,MAAAA;AAAF,QAAST,GAAG,CAACU,KAAnB;AACA,UAAM;AAAEL,MAAAA;AAAF,QAAWL,GAAG,CAACW,IAArB;AACA,UAAMC,KAAK,GAAIZ,GAAG,CAACW,IAAJ,KAAa,OAAb,IAAwBX,GAAG,CAACW,IAAJ,KAAa,cAAtC,GAAwD;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAxD,GAA0E;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAAxF;AAEA,UAAMb,KAAK,CAACc,gBAAN,CAAuB;AAAEC,MAAAA,GAAG,EAAEL;AAAP,KAAvB,EAAoC;AAAEJ,MAAAA,IAAF;AAAQO,MAAAA;AAAR,KAApC,CAAN;AAEAX,IAAAA,GAAG,CAACM,IAAJ,CAAS;AAAEQ,MAAAA,GAAG,EAAE;AAAP,KAAT;AAGH,GAdD,CAcE,OAAOP,GAAP,EAAY;AACV,WAAOP,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAEA,GAAG,CAACQ;AAAX,KAArB,CAAP;AACH;AACJ,CAlBD","sourcesContent":["import connectDB from '../../../assets/utils/ConnectDB'\r\nimport auth from '../../../assets/middleware/auth'\r\nimport Users from '../../../assets/models/UserModel'\r\n\r\nconnectDB()\r\n\r\nexport default async (req, res) => {\r\n    switch (req.method) {\r\n        case \"PATCH\":\r\n            await updateRole(req, res)\r\n            break\r\n    }\r\n}\r\n\r\nconst updateRole = async (req, res) => {\r\n    try {\r\n\r\n        const result = await auth(req, res)\r\n        if (result.role !== 'admin' && result.role !== 'master admin') return res.status(400).json({ err: 'Autenticação inválida' })\r\n\r\n        const { id } = req.query\r\n        const { role } = req.body\r\n        const admin = (req.body === 'admin' || req.body === 'master admin') ? { admin: true } : { admin: false }\r\n\r\n        await Users.findOneAndUpdate({ _id: id }, { role, admin })\r\n\r\n        res.json({ msg: 'Update Success' })\r\n\r\n\r\n    } catch (err) {\r\n        return res.status(500).json({ err: err.message })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}