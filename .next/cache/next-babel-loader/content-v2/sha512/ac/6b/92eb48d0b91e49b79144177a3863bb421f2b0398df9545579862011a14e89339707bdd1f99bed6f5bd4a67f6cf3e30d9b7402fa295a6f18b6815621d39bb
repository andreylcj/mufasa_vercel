{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport connectDB from '../../../assets/utils/ConnectDB';\nimport auth from '../../../assets/middleware/auth';\nimport Users from '../../../assets/models/UserModel';\nconnectDB();\nexport default /*#__PURE__*/(function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(req, res) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = req.method;\n            _context.next = _context.t0 === \"GET\" ? 3 : _context.t0 === \"PATCH\" ? 6 : 9;\n            break;\n\n          case 3:\n            _context.next = 5;\n            return getUsers(req, res);\n\n          case 5:\n            return _context.abrupt(\"break\", 9);\n\n          case 6:\n            _context.next = 8;\n            return uploadInfor(req, res);\n\n          case 8:\n            return _context.abrupt(\"break\", 9);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n})();\n\nvar APIfeatures = /*#__PURE__*/function () {\n  function APIfeatures(query, queryString) {\n    _classCallCheck(this, APIfeatures);\n\n    this.query = query;\n    this.queryString = queryString;\n  }\n\n  _createClass(APIfeatures, [{\n    key: \"filtering\",\n    value: function filtering() {\n      var queryObj = _objectSpread({}, this.queryString);\n\n      var excludeFields = ['sort'];\n      excludeFields.forEach(function (el) {\n        return delete queryObj[el];\n      });\n      if (queryObj.role !== 'all' && queryObj.role) this.query.find({\n        role: queryObj.role\n      });\n      if (queryObj.search !== 'all' && queryObj.search) this.query.find({\n        email: {\n          $regex: queryObj.search\n        }\n      });\n      this.query.find();\n      return this;\n    }\n  }, {\n    key: \"sorting\",\n    value: function sorting() {\n      if (this.queryString.sort) {\n        var sortBy = this.queryString.sort.split(',').join('');\n        this.query = this.query.sort(sortBy);\n      } else {\n        this.query = this.query.sort('-createdAt');\n      }\n\n      return this;\n    }\n  }]);\n\n  return APIfeatures;\n}();\n\nvar getUsers = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(req, res) {\n    var features, users;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            //const result = await auth(req, res)\n            //if (result.role !== 'admin' && result.role !== 'master admin') return res.status(400).json({ err: 'Autenticação inválida' })\n            features = new APIfeatures(Users.find().select('-password'), req.query).filtering().sorting();\n            _context2.next = 4;\n            return features.query;\n\n          case 4:\n            users = _context2.sent;\n            res.json({\n              users: users\n            });\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            return _context2.abrupt(\"return\", res.status(500).json({\n              err: _context2.t0.message\n            }));\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 8]]);\n  }));\n\n  return function getUsers(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar uploadInfor = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(req, res) {\n    var result, _req$body, CPF, CEIpassword, newUser;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return auth(req, res);\n\n          case 3:\n            result = _context3.sent;\n            _req$body = req.body, CPF = _req$body.CPF, CEIpassword = _req$body.CEIpassword;\n            _context3.next = 7;\n            return Users.findOneAndUpdate({\n              _id: result.id\n            }, {\n              CPF: CPF,\n              CEIpassword: CEIpassword\n            }).select(\"-password\");\n\n          case 7:\n            newUser = _context3.sent;\n            res.json({\n              message: \"Update Success\",\n              user: {\n                name: newUser.name,\n                email: newUser.email,\n                CPF: CPF,\n                CEIpassword: CEIpassword,\n                role: newUser.role\n              }\n            });\n            _context3.next = 14;\n            break;\n\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](0);\n            return _context3.abrupt(\"return\", res.status(500).json({\n              err: _context3.t0.message\n            }));\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 11]]);\n  }));\n\n  return function uploadInfor(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/gusta/Pessoal/Mufasa/mufasa_vercel/pages/api/user/index.js"],"names":["connectDB","auth","Users","req","res","method","getUsers","uploadInfor","APIfeatures","query","queryString","queryObj","excludeFields","forEach","el","role","find","search","email","$regex","sort","sortBy","split","join","features","select","filtering","sorting","users","json","status","err","message","result","body","CPF","CEIpassword","findOneAndUpdate","_id","id","newUser","user","name"],"mappings":"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","sourcesContent":["import connectDB from '../../../assets/utils/ConnectDB';\r\nimport auth from '../../../assets/middleware/auth';\r\nimport Users from '../../../assets/models/UserModel';\r\n\r\nconnectDB();\r\n\r\nexport default async (req, res) => {\r\n    switch (req.method) {\r\n        case \"GET\":\r\n            await getUsers(req, res)\r\n            break\r\n        case \"PATCH\":\r\n            await uploadInfor (req, res)\r\n            break;\r\n    }\r\n}\r\n\r\nclass APIfeatures {\r\n  constructor(query, queryString) {\r\n    this.query = query;\r\n    this.queryString = queryString;\r\n  }\r\n\r\n  filtering() {\r\n    const queryObj = { ...this.queryString };\r\n\r\n    const excludeFields = ['sort'];\r\n    excludeFields.forEach((el) => delete (queryObj[el]));\r\n\r\n    if (queryObj.role !== 'all' && queryObj.role) this.query.find({ role: queryObj.role });\r\n    if (queryObj.search !== 'all' && queryObj.search) this.query.find({ email: { $regex: queryObj.search } });\r\n\r\n    this.query.find();\r\n    return this;\r\n  }\r\n\r\n  sorting() {\r\n    if (this.queryString.sort) {\r\n      const sortBy = this.queryString.sort.split(',').join('');\r\n      this.query = this.query.sort(sortBy);\r\n    } else {\r\n      this.query = this.query.sort('-createdAt');\r\n    }\r\n\r\n    return this;\r\n  }\r\n}\r\n\r\nconst getUsers = async (req, res) => {\r\n    try {\r\n\r\n        //const result = await auth(req, res)\r\n        //if (result.role !== 'admin' && result.role !== 'master admin') return res.status(400).json({ err: 'Autenticação inválida' })\r\n\r\n        const features = new APIfeatures(Users.find().select('-password'), req.query)\r\n            .filtering().sorting()\r\n\r\n        const users = await features.query\r\n        res.json({ users })\r\n\r\n    } catch (err) {\r\n        return res.status(500).json({ err: err.message })\r\n    }\r\n}\r\n\r\nconst uploadInfor = async (req, res) => {\r\n    try {\r\n\r\n        const result= await auth (req,res)\r\n\r\n        const {CPF, CEIpassword}= req.body\r\n\r\n        const newUser = await Users.findOneAndUpdate({_id:result.id},{CPF, CEIpassword}).select(\"-password\")\r\n\r\n        res.json({\r\n            message: \"Update Success\",\r\n            user: {\r\n                name:newUser.name,\r\n                email:newUser.email,\r\n                CPF,\r\n                CEIpassword,\r\n                role:newUser.role\r\n            }\r\n        })\r\n\r\n\r\n    }catch (err){\r\n        return res.status(500).json({err: err.message})\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}