{"ast":null,"code":"import connectDB from '../../../assets/utils/ConnectDB';\nimport auth from '../../../assets/middleware/auth';\nimport Users from '../../../assets/models/UserModel';\nconnectDB();\nexport default (async (req, res) => {\n  switch (req.method) {\n    case \"GET\":\n      await getUsers(req, res);\n      break;\n  }\n});\n\nconst getUsers = async (req, res) => {\n  try {\n    const result = await auth(req, res);\n    if (result.role !== 'admin' && result.role !== 'master admin') return res.status(400).json({\n      err: 'Autenticação inválida'\n    });\n    const users = await Users.find().select('-password');\n    res.json({\n      users\n    });\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Andrey luiz/Desktop/MUFASA/mufasa_vercel/pages/api/user/index.js"],"names":["connectDB","auth","Users","req","res","method","getUsers","result","role","status","json","err","users","find","select","message"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,iCAAtB;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AAEAF,SAAS;AAET,gBAAe,OAAOG,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,UAAQD,GAAG,CAACE,MAAZ;AACI,SAAK,KAAL;AACI,YAAMC,QAAQ,CAACH,GAAD,EAAMC,GAAN,CAAd;AACA;AAHR;AAKH,CAND;;AAQA,MAAME,QAAQ,GAAG,OAAOH,GAAP,EAAYC,GAAZ,KAAoB;AACjC,MAAI;AAEA,UAAMG,MAAM,GAAG,MAAMN,IAAI,CAACE,GAAD,EAAMC,GAAN,CAAzB;AACA,QAAIG,MAAM,CAACC,IAAP,KAAgB,OAAhB,IAA2BD,MAAM,CAACC,IAAP,KAAgB,cAA/C,EAA+D,OAAOJ,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAArB,CAAP;AAE/D,UAAMC,KAAK,GAAG,MAAMV,KAAK,CAACW,IAAN,GAAaC,MAAb,CAAoB,WAApB,CAApB;AACAV,IAAAA,GAAG,CAACM,IAAJ,CAAS;AAAEE,MAAAA;AAAF,KAAT;AAEH,GARD,CAQE,OAAOD,GAAP,EAAY;AACV,WAAOP,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAEA,GAAG,CAACI;AAAX,KAArB,CAAP;AACH;AACJ,CAZD","sourcesContent":["import connectDB from '../../../assets/utils/ConnectDB'\r\nimport auth from '../../../assets/middleware/auth'\r\nimport Users from '../../../assets/models/UserModel'\r\n\r\nconnectDB()\r\n\r\nexport default async (req, res) => {\r\n    switch (req.method) {\r\n        case \"GET\":\r\n            await getUsers(req, res)\r\n            break\r\n    }\r\n}\r\n\r\nconst getUsers = async (req, res) => {\r\n    try {\r\n\r\n        const result = await auth(req, res)\r\n        if (result.role !== 'admin' && result.role !== 'master admin') return res.status(400).json({ err: 'Autenticação inválida' })\r\n\r\n        const users = await Users.find().select('-password')\r\n        res.json({ users })\r\n\r\n    } catch (err) {\r\n        return res.status(500).json({ err: err.message })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}