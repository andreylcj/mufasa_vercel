{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Andrey luiz\\\\Desktop\\\\MUFASA\\\\mufasa_vercel\\\\pages\\\\entrar.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { DataContext } from '../store/GlobalState';\nimport ACTION from '../store/Actions';\nimport Loading from '../snnipets/Loading';\nimport validLogin from '../assets/utils/ValidLogin';\nimport { getData, postData } from '../assets/utils/fetchData';\nimport Link from 'next/link';\nimport Cookie from 'js-cookie';\nimport { useRouter } from 'next/router';\n\nfunction Login() {\n  const {\n    0: state,\n    1: dispatch\n  } = useContext(DataContext);\n  const {\n    loading\n  } = state;\n  const {\n    userData\n  } = state;\n  const {\n    auth\n  } = state;\n  const {\n    0: submitStatus,\n    1: setSubmitStatus\n  } = useState({\n    emailMessage: '',\n    passwordMessage: '',\n    emailNotExist: ''\n  });\n  const {\n    email,\n    password\n  } = userData;\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    dispatch({\n      type: ACTION.UPDATE_USER_DATA,\n      payload: {\n        [name]: value\n      }\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      emailMessage,\n      passwordMessage\n    } = validLogin(userData.email, userData.password);\n    setSubmitStatus({\n      emailMessage: emailMessage,\n      passwordMessage: passwordMessage\n    });\n    dispatch({\n      type: 'NOTIFY',\n      payload: {\n        error: `${emailMessage}\\n${passwordMessage}`\n      }\n    });\n\n    if (emailMessage || passwordMessage) {\n      return;\n    }\n\n    dispatch({\n      type: ACTION.START_LOADING\n    });\n    const res = await postData('api/auth/login', userData);\n    dispatch({\n      type: ACTION.END_LOADING\n    });\n    setSubmitStatus({\n      emailNotExist: res.emailMessage,\n      wrongPassword: res.passwordMessage\n    });\n\n    if (res.emailMessage || res.passwordMessage) {\n      return;\n    }\n\n    if (res.err) {\n      alert(res.err);\n      return;\n    }\n\n    Cookie.set('refreshToken', res.refreshToken, {\n      path: '/api/auth/accessToken',\n      expires: 25\n    });\n    localStorage.setItem('firstLogin', true); //set new auth\n\n    const new_auth = await getData('api/auth/accessToken');\n    dispatch({\n      type: ACTION.AUTH,\n      payload: {\n        token: new_auth.accessToken,\n        user: new_auth.user\n      }\n    });\n  };\n\n  useEffect(() => {\n    dispatch({\n      type: ACTION.UPDATE_USER_DATA,\n      payload: {\n        email: '',\n        password: ''\n      }\n    });\n  }, []);\n  const router = useRouter();\n  useEffect(() => {\n    if (Object.keys(auth).length !== 0) router.push('/');\n  }, [auth]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"HOME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      noValidate: true,\n      className: \"mx-auto my-4\",\n      style: {\n        maxWidth: '500px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"form-label\",\n          children: \"E-mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"form-control\",\n          id: \"email\",\n          \"aria-describedby\": \"emailHelp\",\n          name: \"email\",\n          onChange: handleInputChange,\n          value: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"emailHelp\",\n          className: `form-text${submitStatus.emailMessage || submitStatus.emailNotExist ? ' text-danger' : ''}`,\n          children: submitStatus.emailMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: submitStatus.emailMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 37\n          }, this) : submitStatus.emailNotExist ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [submitStatus.emailNotExist, \". Deseja se \", /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/registrar\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"text-primary text-underline\",\n                onClick: () => dispatch({\n                  type: ACTION.UPDATE_USER_DATA,\n                  payload: {\n                    password: \"\"\n                  }\n                }),\n                children: \"cadastrar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 51\n            }, this), \"?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 41\n          }, this) : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"form-label\",\n          children: \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"password\",\n          name: \"password\",\n          onChange: handleInputChange,\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"passwordHelp\",\n          className: `form-text${submitStatus.passwordMessage || submitStatus.wrongPassword ? ' text-danger' : ''}`,\n          children: submitStatus.passwordMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: submitStatus.passwordMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 37\n          }, this) : submitStatus.wrongPassword ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: submitStatus.wrongPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 41\n          }, this) : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"form-check-input\",\n          id: \"checkMeOut\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          htmlFor: \"checkMeOut\",\n          children: \"Lembrar de mim\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary d-flex mx-auto\",\n        children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 37\n          }, this)\n        }, void 0, false) : 'ENTRAR'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Andrey luiz/Desktop/MUFASA/mufasa_vercel/pages/entrar.js"],"names":["React","useState","useContext","useEffect","DataContext","ACTION","Loading","validLogin","getData","postData","Link","Cookie","useRouter","Login","state","dispatch","loading","userData","auth","submitStatus","setSubmitStatus","emailMessage","passwordMessage","emailNotExist","email","password","handleInputChange","e","name","value","target","type","UPDATE_USER_DATA","payload","handleSubmit","preventDefault","error","START_LOADING","res","END_LOADING","wrongPassword","err","alert","set","refreshToken","path","expires","localStorage","setItem","new_auth","AUTH","token","accessToken","user","router","Object","keys","length","push","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\r\nimport { DataContext } from '../store/GlobalState'\r\nimport ACTION from '../store/Actions'\r\nimport Loading from '../snnipets/Loading'\r\nimport validLogin from '../assets/utils/ValidLogin';\r\nimport { getData, postData } from '../assets/utils/fetchData';\r\nimport Link from 'next/link'\r\nimport Cookie from 'js-cookie'\r\nimport { useRouter } from 'next/router'\r\n\r\nfunction Login() {\r\n\r\n    const [state, dispatch] = useContext(DataContext);\r\n    const { loading } = state\r\n    const { userData } = state\r\n    const { auth } = state\r\n\r\n    const [submitStatus, setSubmitStatus] = useState({\r\n        emailMessage: '',\r\n        passwordMessage: '',\r\n        emailNotExist: '',\r\n    })\r\n\r\n    const { email, password } = userData\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        dispatch({\r\n            type: ACTION.UPDATE_USER_DATA,\r\n            payload: { [name]: value }\r\n        });\r\n    }\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n\r\n        const { emailMessage, passwordMessage } = validLogin(userData.email, userData.password)\r\n\r\n        setSubmitStatus({\r\n            emailMessage: emailMessage,\r\n            passwordMessage: passwordMessage,\r\n        })\r\n\r\n        dispatch({ type: 'NOTIFY', payload: { error: `${emailMessage}\\n${passwordMessage}` } })\r\n\r\n        if (emailMessage || passwordMessage) {\r\n            return\r\n        }\r\n\r\n        dispatch({ type: ACTION.START_LOADING, });\r\n        const res = await postData('api/auth/login', userData);\r\n        dispatch({ type: ACTION.END_LOADING, });\r\n\r\n        setSubmitStatus({\r\n            emailNotExist: res.emailMessage,\r\n            wrongPassword: res.passwordMessage,\r\n        })\r\n\r\n        if (res.emailMessage || res.passwordMessage) {\r\n            return\r\n        }\r\n\r\n        if (res.err) {\r\n            alert(res.err)\r\n            return\r\n        }\r\n\r\n        Cookie.set('refreshToken', res.refreshToken, {\r\n            path: '/api/auth/accessToken',\r\n            expires: 25\r\n        })\r\n        localStorage.setItem('firstLogin', true)\r\n\r\n        //set new auth\r\n        const new_auth = await getData('api/auth/accessToken')\r\n\r\n        dispatch({\r\n            type: ACTION.AUTH,\r\n            payload: {\r\n                token: new_auth.accessToken,\r\n                user: new_auth.user\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: ACTION.UPDATE_USER_DATA,\r\n            payload: {\r\n                email: '',\r\n                password: '',\r\n            }\r\n        });\r\n    }, [])\r\n\r\n    const router = useRouter()\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(auth).length !== 0) router.push('/')\r\n    }, [auth])\r\n\r\n    return (\r\n        <>\r\n\r\n            <div><Link href=\"/\"><a>HOME</a></Link></div>\r\n\r\n\r\n            <form onSubmit={handleSubmit} noValidate className=\"mx-auto my-4\"\r\n                style={{ maxWidth: '500px' }}\r\n            >\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"email\" className=\"form-label\">E-mail</label>\r\n                    <input type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\"\r\n                        name=\"email\"\r\n                        onChange={handleInputChange} value={email}\r\n                    />\r\n                    <div id=\"emailHelp\" className={`form-text${submitStatus.emailMessage || submitStatus.emailNotExist ? ' text-danger' : ''}`}>\r\n                        {\r\n                            submitStatus.emailMessage ?\r\n                                (\r\n                                    <p>{submitStatus.emailMessage}</p>\r\n                                ) : submitStatus.emailNotExist ?\r\n                                    (\r\n                                        <p>\r\n                                            {submitStatus.emailNotExist}.\r\n                                        Deseja se <Link href=\"/registrar\">\r\n                                                <a\r\n                                                    className=\"text-primary text-underline\"\r\n                                                    onClick={() => dispatch({ type: ACTION.UPDATE_USER_DATA, payload: { password: \"\" } })}\r\n                                                >\r\n                                                    cadastrar\r\n                                                </a>\r\n                                            </Link>?\r\n                                        </p>\r\n                                    ) : (\r\n                                        ''\r\n                                    )\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"password\" className=\"form-label\">Senha</label>\r\n                    <input type=\"password\" className=\"form-control\" id=\"password\"\r\n                        name=\"password\"\r\n                        onChange={handleInputChange} value={password} />\r\n                    <div id=\"passwordHelp\" className={`form-text${submitStatus.passwordMessage || submitStatus.wrongPassword ? ' text-danger' : ''}`}>\r\n                        {\r\n                            submitStatus.passwordMessage ?\r\n                                (\r\n                                    <p>{submitStatus.passwordMessage}</p>\r\n                                ) : submitStatus.wrongPassword ?\r\n                                    (\r\n                                        <p>{submitStatus.wrongPassword}</p>\r\n                                    ) :\r\n                                    (\r\n                                        ''\r\n                                    )\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"mb-3 form-check\">\r\n                    <input type=\"checkbox\" className=\"form-check-input\" id=\"checkMeOut\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"checkMeOut\">Lembrar de mim</label>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary d-flex mx-auto\">\r\n                    {\r\n                        loading ?\r\n                            (\r\n                                <>\r\n                                    <Loading />\r\n                                </>\r\n                            ) : (\r\n                                'ENTRAR'\r\n                            )\r\n                    }\r\n                </button>\r\n            </form>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}