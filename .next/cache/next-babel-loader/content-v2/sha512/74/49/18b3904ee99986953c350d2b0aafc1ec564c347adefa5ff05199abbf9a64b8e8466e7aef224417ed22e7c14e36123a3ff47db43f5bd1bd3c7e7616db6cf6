{"ast":null,"code":"import connectDB from '../../../assets/utils/ConnectDB';\nimport auth from '../../../assets/middleware/auth';\nimport Users from '../../../assets/models/UserModel';\nconnectDB();\nexport default (async (req, res) => {\n  switch (req.method) {\n    case \"PATCH\":\n      await updateRole(req, res);\n      break;\n\n    case \"DELETE\":\n      await deleteUser(req, res);\n      break;\n  }\n});\n\nconst updateRole = async (req, res) => {\n  try {\n    const result = await auth(req, res);\n    if (result.role !== 'master admin') return res.status(400).json({\n      err: 'Autenticação inválida'\n    });\n    const {\n      id\n    } = req.query;\n    const {\n      role\n    } = req.body;\n    const admin = req.body.role === 'admin' || req.body.role === 'master admin' ? true : false;\n    await Users.findOneAndUpdate({\n      _id: id\n    }, {\n      role,\n      admin\n    });\n    res.json({\n      msg: 'Update Success'\n    });\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n};\n\nconst deleteUser = async (req, res) => {\n  try {\n    const result = await auth(req, res);\n    if (result.role !== 'master admin') return res.status(400).json({\n      err: 'Autenticação inválida'\n    });\n    const {\n      id\n    } = req.query;\n    await Users.findByIdAndDelete(id);\n    res.json({\n      msg: 'Delete Success'\n    });\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Andrey luiz/Desktop/MUFASA/mufasa_vercel/pages/api/user/[id].js"],"names":["connectDB","auth","Users","req","res","method","updateRole","deleteUser","result","role","status","json","err","id","query","body","admin","findOneAndUpdate","_id","msg","message","findByIdAndDelete"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,iCAAtB;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AAEAF,SAAS;AAET,gBAAe,OAAOG,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,UAAQD,GAAG,CAACE,MAAZ;AACI,SAAK,OAAL;AACI,YAAMC,UAAU,CAACH,GAAD,EAAMC,GAAN,CAAhB;AACA;;AACJ,SAAK,QAAL;AACI,YAAMG,UAAU,CAACJ,GAAD,EAAMC,GAAN,CAAhB;AACA;AANR;AAQH,CATD;;AAWA,MAAME,UAAU,GAAG,OAAOH,GAAP,EAAYC,GAAZ,KAAoB;AACnC,MAAI;AAEA,UAAMI,MAAM,GAAG,MAAMP,IAAI,CAACE,GAAD,EAAMC,GAAN,CAAzB;AACA,QAAII,MAAM,CAACC,IAAP,KAAgB,cAApB,EAAoC,OAAOL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAArB,CAAP;AAEpC,UAAM;AAAEC,MAAAA;AAAF,QAASV,GAAG,CAACW,KAAnB;AACA,UAAM;AAAEL,MAAAA;AAAF,QAAWN,GAAG,CAACY,IAArB;AACA,UAAMC,KAAK,GAAIb,GAAG,CAACY,IAAJ,CAASN,IAAT,KAAkB,OAAlB,IAA6BN,GAAG,CAACY,IAAJ,CAASN,IAAT,KAAkB,cAAhD,GAAkE,IAAlE,GAAyE,KAAvF;AAEA,UAAMP,KAAK,CAACe,gBAAN,CAAuB;AAAEC,MAAAA,GAAG,EAAEL;AAAP,KAAvB,EAAoC;AAAEJ,MAAAA,IAAF;AAAQO,MAAAA;AAAR,KAApC,CAAN;AAEAZ,IAAAA,GAAG,CAACO,IAAJ,CAAS;AAAEQ,MAAAA,GAAG,EAAE;AAAP,KAAT;AAGH,GAdD,CAcE,OAAOP,GAAP,EAAY;AACV,WAAOR,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAEA,GAAG,CAACQ;AAAX,KAArB,CAAP;AACH;AACJ,CAlBD;;AAoBA,MAAMb,UAAU,GAAG,OAAOJ,GAAP,EAAYC,GAAZ,KAAoB;AACnC,MAAI;AAEA,UAAMI,MAAM,GAAG,MAAMP,IAAI,CAACE,GAAD,EAAMC,GAAN,CAAzB;AACA,QAAII,MAAM,CAACC,IAAP,KAAgB,cAApB,EAAoC,OAAOL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAArB,CAAP;AAEpC,UAAM;AAAEC,MAAAA;AAAF,QAASV,GAAG,CAACW,KAAnB;AAEA,UAAMZ,KAAK,CAACmB,iBAAN,CAAwBR,EAAxB,CAAN;AAEAT,IAAAA,GAAG,CAACO,IAAJ,CAAS;AAAEQ,MAAAA,GAAG,EAAE;AAAP,KAAT;AAGH,GAZD,CAYE,OAAOP,GAAP,EAAY;AACV,WAAOR,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAEA,GAAG,CAACQ;AAAX,KAArB,CAAP;AACH;AACJ,CAhBD","sourcesContent":["import connectDB from '../../../assets/utils/ConnectDB'\r\nimport auth from '../../../assets/middleware/auth'\r\nimport Users from '../../../assets/models/UserModel'\r\n\r\nconnectDB()\r\n\r\nexport default async (req, res) => {\r\n    switch (req.method) {\r\n        case \"PATCH\":\r\n            await updateRole(req, res)\r\n            break\r\n        case \"DELETE\":\r\n            await deleteUser(req, res)\r\n            break\r\n    }\r\n}\r\n\r\nconst updateRole = async (req, res) => {\r\n    try {\r\n\r\n        const result = await auth(req, res)\r\n        if (result.role !== 'master admin') return res.status(400).json({ err: 'Autenticação inválida' })\r\n\r\n        const { id } = req.query\r\n        const { role } = req.body\r\n        const admin = (req.body.role === 'admin' || req.body.role === 'master admin') ? true : false\r\n\r\n        await Users.findOneAndUpdate({ _id: id }, { role, admin })\r\n\r\n        res.json({ msg: 'Update Success' })\r\n\r\n\r\n    } catch (err) {\r\n        return res.status(500).json({ err: err.message })\r\n    }\r\n}\r\n\r\nconst deleteUser = async (req, res) => {\r\n    try {\r\n\r\n        const result = await auth(req, res)\r\n        if (result.role !== 'master admin') return res.status(400).json({ err: 'Autenticação inválida' })\r\n\r\n        const { id } = req.query\r\n\r\n        await Users.findByIdAndDelete(id)\r\n\r\n        res.json({ msg: 'Delete Success' })\r\n\r\n\r\n    } catch (err) {\r\n        return res.status(500).json({ err: err.message })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}